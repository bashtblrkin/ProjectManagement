{"version":3,"file":"alife-file-to-base64.js","sources":["alife-file-to-base64/lib/alife-file-to-base64.directive.ts","alife-file-to-base64/lib/alife-file-to-base64.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, EventEmitter, ElementRef, Input, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[alife-file-to-base64]'\r\n})\r\nexport class AlifeFileToBase64Directive {\r\n\r\n  @Input() type: string;\r\n  @Input() fileModel: any;\r\n  @Input() rawFileModel: any;\r\n\r\n  @Output() onFileChanged: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() fileModelChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() rawFileModelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  isTypeFile: boolean = false;\r\n  userCapture: boolean = false;\r\n\r\n  globalFilesData: any = [];\r\n  globalRawFilesData: any = [];\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    this.isTypeFile = this.type === 'file';\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initialize the action\r\n   */\r\n  init() {\r\n    if (!this.isTypeFile) {\r\n      console.error(\"alife-file-to-base64 will work only when input type is file.\");\r\n      this.removeFileChangeAction();\r\n      return;\r\n    }\r\n    // // Check for the various File API support.\r\n    // if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n    //   // Great success! All the File APIs are supported.\r\n    // } else {\r\n    //   alert('The File APIs are not fully supported in this browser.');\r\n    // }\r\n    this.bindFileChangeAction();\r\n  }\r\n\r\n  /**\r\n   * Fire the events\r\n   */\r\n  onFileReadingCompleted() {\r\n    this.fileModelChange.next(this.globalFilesData);\r\n    this.rawFileModelChange.next(this.globalRawFilesData);\r\n    this.onFileChanged.next(this.globalFilesData);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Read the files and prepare the output json with base64.\r\n   * \r\n   * @param event\r\n   */\r\n  handleFileSelection(event) {\r\n\r\n    if (!this.isTypeFile) {\r\n      return;\r\n    }\r\n\r\n    let files = event.target.files;\r\n    this.globalRawFilesData = files;\r\n\r\n    let fileOutput = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      let file = files[i];\r\n      let opt = {\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type\r\n      }\r\n      fileOutput.push(opt);\r\n    }\r\n\r\n\r\n    var that = this;\r\n    function fileReadingCompleted() {\r\n      that.globalFilesData = fileOutput;\r\n      that.onFileReadingCompleted();\r\n    }\r\n\r\n    var reader = new FileReader();\r\n    function readFile(index) {\r\n\r\n      reader.onload = (function (fileData: any) {\r\n        let base64 = fileData.target.result;\r\n        fileOutput[index].base64 = base64;\r\n        readFile(index + 1);\r\n      });\r\n\r\n      if (index >= files.length) {\r\n        fileReadingCompleted();\r\n        return;\r\n      }\r\n      reader.readAsDataURL(files[index]);\r\n    }\r\n\r\n    readFile(0);\r\n\r\n  }\r\n\r\n  /**\r\n   * Add Event listener action on input \r\n   */\r\n  bindFileChangeAction() {\r\n    this.elementRef.nativeElement.addEventListener('change', this.handleFileSelection.bind(this), this.userCapture);\r\n  }\r\n\r\n  /**\r\n   * Remove Event listener action on input \r\n   */\r\n  removeFileChangeAction() {\r\n    this.elementRef.nativeElement.addEventListener('change', this.handleFileSelection.bind(this), this.userCapture);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AlifeFileToBase64Directive } from './alife-file-to-base64.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [AlifeFileToBase64Directive],\r\n  exports: [AlifeFileToBase64Directive]\r\n})\r\nexport class AlifeFileToBase64Module { }\r\n"]}