{"version":3,"file":"alife-file-to-base64.umd.js.map","sources":["ng://alife-file-to-base64/lib/alife-file-to-base64.directive.ts","ng://alife-file-to-base64/lib/alife-file-to-base64.module.ts"],"sourcesContent":["import { Directive, EventEmitter, ElementRef, Input, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[alife-file-to-base64]'\r\n})\r\nexport class AlifeFileToBase64Directive {\r\n\r\n  @Input() type: string;\r\n  @Input() fileModel: any;\r\n  @Input() rawFileModel: any;\r\n\r\n  @Output() onFileChanged: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() fileModelChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() rawFileModelChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  isTypeFile: boolean = false;\r\n  userCapture: boolean = false;\r\n\r\n  globalFilesData: any = [];\r\n  globalRawFilesData: any = [];\r\n\r\n  constructor(private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    this.isTypeFile = this.type === 'file';\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initialize the action\r\n   */\r\n  init() {\r\n    if (!this.isTypeFile) {\r\n      console.error(\"alife-file-to-base64 will work only when input type is file.\");\r\n      this.removeFileChangeAction();\r\n      return;\r\n    }\r\n    // // Check for the various File API support.\r\n    // if (window.File && window.FileReader && window.FileList && window.Blob) {\r\n    //   // Great success! All the File APIs are supported.\r\n    // } else {\r\n    //   alert('The File APIs are not fully supported in this browser.');\r\n    // }\r\n    this.bindFileChangeAction();\r\n  }\r\n\r\n  /**\r\n   * Fire the events\r\n   */\r\n  onFileReadingCompleted() {\r\n    this.fileModelChange.next(this.globalFilesData);\r\n    this.rawFileModelChange.next(this.globalRawFilesData);\r\n    this.onFileChanged.next(this.globalFilesData);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Read the files and prepare the output json with base64.\r\n   * \r\n   * @param event\r\n   */\r\n  handleFileSelection(event) {\r\n\r\n    if (!this.isTypeFile) {\r\n      return;\r\n    }\r\n\r\n    let files = event.target.files;\r\n    this.globalRawFilesData = files;\r\n\r\n    let fileOutput = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      let file = files[i];\r\n      let opt = {\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type\r\n      }\r\n      fileOutput.push(opt);\r\n    }\r\n\r\n\r\n    var that = this;\r\n    function fileReadingCompleted() {\r\n      that.globalFilesData = fileOutput;\r\n      that.onFileReadingCompleted();\r\n    }\r\n\r\n    var reader = new FileReader();\r\n    function readFile(index) {\r\n\r\n      reader.onload = (function (fileData: any) {\r\n        let base64 = fileData.target.result;\r\n        fileOutput[index].base64 = base64;\r\n        readFile(index + 1);\r\n      });\r\n\r\n      if (index >= files.length) {\r\n        fileReadingCompleted();\r\n        return;\r\n      }\r\n      reader.readAsDataURL(files[index]);\r\n    }\r\n\r\n    readFile(0);\r\n\r\n  }\r\n\r\n  /**\r\n   * Add Event listener action on input \r\n   */\r\n  bindFileChangeAction() {\r\n    this.elementRef.nativeElement.addEventListener('change', this.handleFileSelection.bind(this), this.userCapture);\r\n  }\r\n\r\n  /**\r\n   * Remove Event listener action on input \r\n   */\r\n  removeFileChangeAction() {\r\n    this.elementRef.nativeElement.addEventListener('change', this.handleFileSelection.bind(this), this.userCapture);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AlifeFileToBase64Directive } from './alife-file-to-base64.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [AlifeFileToBase64Directive],\r\n  exports: [AlifeFileToBase64Directive]\r\n})\r\nexport class AlifeFileToBase64Module { }\r\n"],"names":["EventEmitter","Directive","ElementRef","Input","Output","NgModule"],"mappings":"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"}
