{"version":3,"file":"alife-file-to-base64.directive.d.ts","sources":["alife-file-to-base64.directive.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef } from '@angular/core';\r\nexport declare class AlifeFileToBase64Directive {\r\n    private elementRef;\r\n    type: string;\r\n    fileModel: any;\r\n    rawFileModel: any;\r\n    onFileChanged: EventEmitter<any>;\r\n    fileModelChange: EventEmitter<any>;\r\n    rawFileModelChange: EventEmitter<any>;\r\n    isTypeFile: boolean;\r\n    userCapture: boolean;\r\n    globalFilesData: any;\r\n    globalRawFilesData: any;\r\n    constructor(elementRef: ElementRef);\r\n    ngOnInit(): void;\r\n    /**\r\n     * Initialize the action\r\n     */\r\n    init(): void;\r\n    /**\r\n     * Fire the events\r\n     */\r\n    onFileReadingCompleted(): void;\r\n    /**\r\n     *\r\n     * Read the files and prepare the output json with base64.\r\n     *\r\n     * @param event\r\n     */\r\n    handleFileSelection(event: any): void;\r\n    /**\r\n     * Add Event listener action on input\r\n     */\r\n    bindFileChangeAction(): void;\r\n    /**\r\n     * Remove Event listener action on input\r\n     */\r\n    removeFileChangeAction(): void;\r\n}\r\n"]}