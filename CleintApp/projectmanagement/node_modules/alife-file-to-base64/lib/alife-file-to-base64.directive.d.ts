import { EventEmitter, ElementRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class AlifeFileToBase64Directive {
    private elementRef;
    type: string;
    fileModel: any;
    rawFileModel: any;
    onFileChanged: EventEmitter<any>;
    fileModelChange: EventEmitter<any>;
    rawFileModelChange: EventEmitter<any>;
    isTypeFile: boolean;
    userCapture: boolean;
    globalFilesData: any;
    globalRawFilesData: any;
    constructor(elementRef: ElementRef);
    ngOnInit(): void;
    /**
     * Initialize the action
     */
    init(): void;
    /**
     * Fire the events
     */
    onFileReadingCompleted(): void;
    /**
     *
     * Read the files and prepare the output json with base64.
     *
     * @param event
     */
    handleFileSelection(event: any): void;
    /**
     * Add Event listener action on input
     */
    bindFileChangeAction(): void;
    /**
     * Remove Event listener action on input
     */
    removeFileChangeAction(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AlifeFileToBase64Directive, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AlifeFileToBase64Directive, "[alife-file-to-base64]", never, { "type": "type"; "fileModel": "fileModel"; "rawFileModel": "rawFileModel"; }, { "onFileChanged": "onFileChanged"; "fileModelChange": "fileModelChange"; "rawFileModelChange": "rawFileModelChange"; }, never>;
}

//# sourceMappingURL=alife-file-to-base64.directive.d.ts.map